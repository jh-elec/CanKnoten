/* Generated by CodeDescriptor 1.5.0.0907 */
/*
* Project Name      -> AVR - SPI Treiber
* Version           -> 1.0.0.0621
* Author            -> Hm @ Workstadion.: QP-01-02
* Build Date        -> 21.06.2018 06:48:20
* Description       -> Description
*
*
*
*/

#include <avr/interrupt.h>

//#define SPI_CS_ENABLE

#if defined ( __AVR_ATmega32__ )
	
	#define SPI_DDR			DDRB
	#define SPI_PORT		PORTB
	#define SPI_PIN			PINB
	#define SPI_SCK_bp		PB7
	#define SPI_MISO_bp		PB6
	#define SPI_MOSI_bp		PB5
	
	/*
	*	Software Slave Select Signal
	*	Muss bei dem Master selbst organisiert werden.
	*	Der "SS" Hardware Pin wird nur bei dem Slave verwendet.
	*/
	#define SPI_SS_DDR		DDRC
	#define SPI_SS_PORT		PORTC
	#define SPI_SS_bp		PC1

#elif defined (__AVR_ATmega168PA__ )

	#define SPI_DDR			DDRB
	#define SPI_PORT		PORTB
	#define SPI_PIN			PINB
	#define SPI_SCK_bp		PB5
	#define SPI_MISO_bp		PB4
	#define SPI_MOSI_bp		PB3
	
	/*
	*	Software Slave Select Signal
	*	Muss bei dem Master selbst organisiert werden.
	*	Der "SS" Hardware Pin wird nur bei dem Slave verwendet.
	*/
	#define SPI_SS_DDR		DDRB
	#define SPI_SS_PORT		PORTB
	#define SPI_SS_bp		PB2
#else
	#error "no definition for MCU"
#endif


enum spiPrescaler	
{
	/*
	*	DoubleSpeed =  0 ( SPI2X )
	*/
	PRESCALER_4,		
	PRESCALER_16,		
	PRESCALER_64,	
	PRESCALER_128,		
	
	/*
	*	DoubleSpeed = 1  ( SPI2X )
	*/
	SPI2X_PRESCALER_2,
	SPI2X_PRESCALER_8,
	SPI2X_PRESCALER_32,
	SPI2X_PRESCALER_64,
	
};

enum spiClockOptions
{
	MODE1,
	MODE2,
	MODE3,
	MODE4,	
};

enum spiDoubleSpeed	
{
	DOUBLE_SPEED_OFF,
	DOUBLE_SPEED_ON ,	
};



uint8_t spiInit( enum spiPrescaler divisor , enum spiClockOptions clock_option , enum spiDoubleSpeed doubleSpeed);

void	spiWrite( uint8_t data );

uint8_t spiRead( uint8_t data );

uint8_t spiWriteRead( uint8_t data );

void	spiSlaveSelect( void );

void	spiSlaveDeSelect( void );

